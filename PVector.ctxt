#BlueJ class context
comment0.params=
comment0.target=PVector()
comment1.params=x\ y\ z
comment1.target=PVector(float,\ float,\ float)
comment10.params=v
comment10.target=void\ add(PVector)
comment11.params=x\ y\ z
comment11.target=void\ add(float,\ float,\ float)
comment12.params=v1\ v2
comment12.target=PVector\ add(PVector,\ PVector)
comment13.params=v1\ v2\ target
comment13.target=PVector\ add(PVector,\ PVector,\ PVector)
comment14.params=v
comment14.target=void\ sub(PVector)
comment15.params=x\ y\ z
comment15.target=void\ sub(float,\ float,\ float)
comment16.params=v1\ v2
comment16.target=PVector\ sub(PVector,\ PVector)
comment17.params=v1\ v2\ target
comment17.target=PVector\ sub(PVector,\ PVector,\ PVector)
comment18.params=n
comment18.target=void\ mult(float)
comment19.params=v\ n
comment19.target=PVector\ mult(PVector,\ float)
comment2.params=x\ y
comment2.target=PVector(float,\ float)
comment20.params=v\ n\ target
comment20.target=PVector\ mult(PVector,\ float,\ PVector)
comment21.params=v
comment21.target=void\ mult(PVector)
comment22.params=v1\ v2
comment22.target=PVector\ mult(PVector,\ PVector)
comment23.params=v1\ v2\ target
comment23.target=PVector\ mult(PVector,\ PVector,\ PVector)
comment24.params=n
comment24.target=void\ div(float)
comment25.params=v\ n
comment25.target=PVector\ div(PVector,\ float)
comment26.params=v\ n\ target
comment26.target=PVector\ div(PVector,\ float,\ PVector)
comment27.params=v
comment27.target=void\ div(PVector)
comment28.params=v1\ v2
comment28.target=PVector\ div(PVector,\ PVector)
comment29.params=v1\ v2\ target
comment29.target=PVector\ div(PVector,\ PVector,\ PVector)
comment3.params=x\ y\ z
comment3.target=void\ set(float,\ float,\ float)
comment30.params=v
comment30.target=float\ dist(PVector)
comment31.params=v1\ v2
comment31.target=float\ dist(PVector,\ PVector)
comment32.params=v
comment32.target=float\ dot(PVector)
comment33.params=x\ y\ z
comment33.target=float\ dot(float,\ float,\ float)
comment34.params=v1\ v2
comment34.target=float\ dot(PVector,\ PVector)
comment35.params=v
comment35.target=PVector\ cross(PVector)
comment36.params=v\ target
comment36.target=PVector\ cross(PVector,\ PVector)
comment37.params=v1\ v2\ target
comment37.target=PVector\ cross(PVector,\ PVector,\ PVector)
comment38.params=
comment38.target=void\ normalize()
comment39.params=target
comment39.target=PVector\ normalize(PVector)
comment4.params=v
comment4.target=void\ set(PVector)
comment40.params=max
comment40.target=void\ limit(float)
comment41.params=len
comment41.target=void\ setMag(float)
comment42.params=target\ len
comment42.target=PVector\ setMag(PVector,\ float)
comment43.params=
comment43.target=float\ heading2D()
comment44.params=theta
comment44.target=void\ rotate(float)
comment45.params=v\ amt
comment45.target=void\ lerp(PVector,\ float)
comment46.params=x\ y\ z\ amt
comment46.target=void\ lerp(float,\ float,\ float,\ float)
comment47.params=v1\ v2
comment47.target=float\ angleBetween(PVector,\ PVector)
comment48.params=
comment48.target=java.lang.String\ toString()
comment49.params=
comment49.target=float[]\ array()
comment5.params=source
comment5.target=void\ set(float[])
comment50.params=obj
comment50.target=boolean\ equals(java.lang.Object)
comment51.params=
comment51.target=int\ hashCode()
comment6.params=
comment6.target=PVector\ get()
comment7.params=target
comment7.target=float[]\ get(float[])
comment8.params=
comment8.target=float\ mag()
comment9.params=
comment9.target=float\ magSq()
numComments=52
